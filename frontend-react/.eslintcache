[{"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/index.js":"1","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/MainPage.js":"2","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/Login.js":"3","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/manage/Manage.js":"4","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/Navbar.js":"5","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/manage/ManageObjects.js":"6","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/config.js":"7","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/styling/Themes.js":"8","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/styling/globalStyles.js":"9","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/templates/Forms.js":"10","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/functions/lookup.js":"11","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/Player.js":"12","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/Chatbox.js":"13","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/functions/getCookie.js":"14"},{"size":608,"mtime":1612166662692,"results":"15","hashOfConfig":"16"},{"size":503,"mtime":1612260853054,"results":"17","hashOfConfig":"16"},{"size":2776,"mtime":1612260500256,"results":"18","hashOfConfig":"16"},{"size":602,"mtime":1612175565293,"results":"19","hashOfConfig":"16"},{"size":8842,"mtime":1612259495034,"results":"20","hashOfConfig":"16"},{"size":2285,"mtime":1612185091477,"results":"21","hashOfConfig":"16"},{"size":869,"mtime":1612185644931,"results":"22","hashOfConfig":"16"},{"size":431,"mtime":1612216691273,"results":"23","hashOfConfig":"16"},{"size":857,"mtime":1612217383496,"results":"24","hashOfConfig":"16"},{"size":4891,"mtime":1612185883557,"results":"25","hashOfConfig":"16"},{"size":973,"mtime":1611960294782,"results":"26","hashOfConfig":"16"},{"size":1605,"mtime":1612262312562,"results":"27","hashOfConfig":"16"},{"size":2819,"mtime":1612261463101,"results":"28","hashOfConfig":"16"},{"size":586,"mtime":1611960294782,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"16w7z99",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/index.js",[],["62","63"],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/MainPage.js",[],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/Login.js",[],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/manage/Manage.js",[],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/Navbar.js",["64","65","66","67","68","69"],"import React, { useEffect, useState } from 'react'\nimport $ from 'jquery'\nimport Player from './Player'\nimport Chatbox from './Chatbox'\nimport { djangoLookup } from '../functions/lookup'\nimport openSocket from \"socket.io-client\"\n\nconst ENDPOINT = window.location.protocol + \"//\" + window.location.hostname + \":4001\"\n\nfunction Navbar(props) {\n    const {setTheme} = props\n    const [displayChat, setDisplayChat] = useState(true)\n    const [lectures, setLectures] = useState([])\n    const [currentUser, setCurrentUser] = useState(null)\n    const [displaySearch, setDisplaySearch] = useState(false)\n    const [stream, _setStream] = useState(false)\n    const streamRef = React.useRef(stream)\n    const setStream = data => {\n      streamRef.current = data\n      _setStream(data)\n    }\n    const [socket, setSocket] = useState(false)\n\n    window.addEventListener('keydown', function(e) {\n      console.log(1)\n      e.stopImmediatePropagation()\n      if(e.which === 27) {\n        setDisplaySearch(false)\n      }\n    });\n\n    if(!socket) {\n      setSocket(openSocket(ENDPOINT, {transports: ['websocket']}))\n    }\n\n    useEffect(() => {\n      socket.on(\"SetSocket\", data => {\n        djangoLookup(\"POST\", \"/socket/set/\", {socketID: data}, (response, status) => {\n          status === 200 && console.log(response)\n        })\n      })\n    }, [])\n\n    useEffect(() => {\n      socket.emit(\"Join\", stream)\n    }, [stream])\n\n    useEffect(() => {\n      djangoLookup(\"GET\", \"/users/current/\", {}, (response, status) => {\n        if(status === 200) {\n          setCurrentUser(response)\n          djangoLookup(\"GET\", \"/lectures/?action=all\", {}, (response, status) => {\n            status === 200 && setLectures(response)\n          })\n        } else {\n          djangoLookup(\"GET\", \"/lectures/?action=all\", {}, (response, status) => {\n            status === 200 && setLectures(response)\n          })\n        }\n      })\n      djangoLookup(\"GET\", \"/streams/?action=all\", {}, (response, status) => {\n        status === 200 && setStream(response[0])\n        $(\"video\")[0].load()\n      })\n    }, [])\n\n    const libraryAccordions = lectures.map((lecture, index) => {\n      return <LibraryAccordion key={lecture.name + index} lecture={lecture} setMainStream={setStream} />\n    })\n\n    return <div><div className=\"d-flex\" id=\"wrapper\">\n\n    <div className=\"\" id=\"sidebar-wrapper\">\n      <div className=\"sidebar-heading\" style={{textAlign: \"center\", marginBottom: 40}}><img style={{width:200}} src=\"/static/assets/img/tum_logo.png\"></img></div>\n      <div className=\"list-group list-group-mine list-group-flush\">\n        {/* <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Dashboard</a> */}\n        {libraryAccordions}\n      </div>\n    </div>\n\n    <div id=\"page-content-wrapper\">\n      <UpperNavbar setTheme={setTheme} setStream={setStream} setDisplaySearch={setDisplaySearch} displaySearch={displaySearch} user={currentUser} />\n      <div className=\"\" style={{marginTop: 20, marginBottom: 20, textAlign: \"center\"}}>\n        {stream && <div><h2>{stream.lecture.name}</h2>\n        <p style={{marginBottom:0}}>{stream.room}</p>\n        <p>{stream.lecture.teacher}</p></div>}\n        <p>{prettifyDate(new Date(stream.time))} : {stream.name}</p>\n      </div>\n      <div className=\"row\">\n        <div className={displayChat ? \"col-sm-9\" : \"\"} style={!displayChat ? {flex: 1} : {}}>\n            <Player stream={stream} setDisplayChat={setDisplayChat} />\n        </div>\n        <div className=\"col-sm-3\" style={displayChat ? {display: \"block\"} : {display: \"none\"}}>\n            {stream && <Chatbox socket={socket} streamRef={streamRef} stream={stream} currentUser={currentUser} />}\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n  </div>\n}\n\nfunction UpperNavbar(props) {\n  const {displaySearch, setDisplaySearch, setStream, setTheme} = props\n  const [search, setSearch] = useState(\"\")\n  const [searchResults, setSearchResults] = useState([])\n\n  const handleUpdateSearch = (event) => {\n    event.preventDefault()\n    setSearch($(\"#search-box\").val())\n  }\n\n  const handleThemeToggle = (event) => {\n    setTheme(prevState => {\n      return prevState === 'light' ? 'dark' : 'light'\n    })\n  }\n\n  const handleUpdateStream = (newStream) => {\n    djangoLookup(\"GET\", \"/streams/?action=stream&stream=\" + newStream.name, {}, (response, status) => {\n      status === 200 && setStream(response[0])\n      $(\"video\")[0].load()\n    })\n    setDisplaySearch(false)\n  }\n  \n  useEffect(() => {\n    djangoLookup(\"GET\", \"/streams/?action=filter&filter=\" + search, {}, (response, status) => {\n      status === 200 && setSearchResults(response)\n    })\n  }, [search])\n\n  const handleToggleButton = (event) => {\n    event.preventDefault()\n    $(\"#wrapper\").toggleClass(\"toggled\");\n  }\n\n  const searchResultList = searchResults.map((result, index) => {\n    return <li key={result.name + index} className=\"list-group-item\"><a href=\"#\" onClick={() => handleUpdateStream(result)}>{result.name}</a></li>\n  })\n\n  const {user} = props\n  return <div>\n    <nav className=\"navbar navbar-expand-lg\">\n      <button className=\"btn\" id=\"menu-toggle\" onClick={handleToggleButton}><span className=\"navbar-toggler-icon\"><i className=\"fa fa-bars\"></i></span></button>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <label className=\"switch\" style={{marginTop: 10, marginLeft: 50}}><input onClick={handleThemeToggle} type=\"checkbox\" />    <div></div></label>\n      <i className=\"icon-moon\" style={{marginLeft: 15, marginTop: 3}}></i>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n        <form style={{marginRight: 0}} className=\"form-inline my-2 my-lg-0\">\n          <button onClick={() => setDisplaySearch(true)} className=\"btn btn-outline-secondary my-2 my-sm-0\" type=\"button\">Search Streams</button>\n          <div className=\"container\"></div>\n        </form>\n          <li className=\"nav-item active\">\n            <a style={{marginRight: 20}} className=\"nav-link\" href={user === null ? \"/login/\" : \"/logout/\"}>{user === null ? \"Login\" : \"Logout\"}<span className=\"sr-only\">(current)</span></a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n    {displaySearch && <div className=\"search-overlay\">\n    <body>\n        <div className=\"orange-search\">\n            <form action=\"search.php\" method=\"post\">\n              <input autoComplete=\"off\" onChange={handleUpdateSearch} id=\"search-box\" className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>               \n            </form>\n          {search !== \"\" && <div className=\"list-group\">\n            {searchResultList}\n          </div>}\n        </div>\n    </body>\n  </div>}\n  </div>\n}\n\nfunction LibraryAccordion(props) {\n  const {lecture, setMainStream} = props\n  const [streams, setStreams] = useState([])\n\n  const handleUpdateStream = (newStream) => {\n    djangoLookup(\"GET\", \"/streams/?action=stream&stream=\" + newStream.name, {}, (response, status) => {\n      status === 200 && setMainStream(response[0])\n      $(\"video\")[0].load()\n    })\n  }\n\n  useEffect(() => {\n    djangoLookup(\"GET\", \"/streams/?action=lecture&lecture=\" + lecture.name, {}, (response, status) => {\n      status === 200 && setStreams(response)\n    })\n  }, [])\n\n  const accordionList = streams.map((stream, index) => {\n    return <li key={stream.name + index} ><a className=\"accordion-list-item\" onClick={() => handleUpdateStream(stream)} href=\"#\">{stream.name}</a></li>\n  })\n\n  return <div id=\"accordion\" className=\"my-accordion\">\n      <a className=\"list-group-item list-group-item-action\" data-toggle=\"collapse\" data-parent=\"#accordion\" href={\"#\" + lecture.name.replaceAll(\" \", \"\")}>\n        {lecture.name}\n    </a>\n    <div id={lecture.name.replaceAll(\" \", \"\")} className=\"panel-collapse collapse in\">\n      <div className=\"panel-body\">\n          <ul className=\"accordion-list\">\n              {accordionList}\n          </ul>\n      </div>\n    </div>\n  </div>\n}\n\nfunction prettifyDate(date) {\n  let weekdays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n  let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const displayTwoDigits = (number) => {\n      if(number < 10) {\n          return \"0\" + number\n      } else {\n          return number\n      }\n  }\n  return weekdays[date.getDay()] + \", \" + date.getDate() + \". \" + months[date.getMonth()] + \" \" + date.getFullYear() + \", \" + displayTwoDigits(date.getHours()) + \":\" + displayTwoDigits(date.getMinutes())\n}\n\nexport default Navbar","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/manage/ManageObjects.js",["70"],"import React, { useEffect, useState } from 'react'\nimport { djangoLookup } from '../../functions/lookup'\nimport { PersonForm } from '../templates/Forms'\nimport $ from 'jquery'\n\nfunction ManageObjects(props) {\n    const {name, formEntries} = props\n    const [options, setOptions] = useState([])\n\n    useEffect(() => {\n        djangoLookup(\"GET\", \"/\" + name + \"/?action=all\", {}, (response, status) => {\n            status === 200 && setOptions(response)\n        })\n    }, [])\n\n    const handleObjectSubmit = (event) => {\n        event.preventDefault()\n        const formEl = document.getElementById(name + \"-form\")\n        const formData = new FormData(formEl)\n        const data = {}\n        formData.forEach((value, key) => {\n            data[key] = value\n        })\n        if(typeof data.time !== \"undefined\") {\n            if(data.time !== \"\") {\n                data.time = data[\"date\"] + \" \" + data[\"time\"]\n            } else {\n                data.time = data[\"date\"]\n            }\n        }\n        formEntries.forEach(entry => {\n            if(entry.type === \"dropdown\") {\n                data[entry.name] = $(\"#\" + entry.name + \" option:selected\").val()\n            }\n        })\n        delete data.date\n        console.log(data)\n        djangoLookup(\"POST\", \"/\" + name + \"/create/\", data, (response, status) => {\n        })\n    }\n\n    const handleObjectDelete = (event) => {\n        event.preventDefault()\n        const objectName = $(\"#\" + name + \" option:selected\").val()\n        djangoLookup(\"POST\", \"/\" + name + \"/delete/\", {name: objectName}, (response, status) => {\n            status === 200 && console.log(response)\n            status !== 200 && console.log(\"Error deleting the object\")\n        })\n    }\n\n    const existingEntries =[{name: name, displayName: \"Existing \" + name, type: \"dropdown\", entries: options.map(option => option.name)}]\n\n    return <div><form id={name + \"-form\"}>\n        <h1>{\"Manage \" + name}</h1>\n        <PersonForm entries={formEntries} />\n        <button className=\"btn btn-primary\" onClick={handleObjectSubmit}>Submit</button>\n        <PersonForm entries={existingEntries} />\n        </form>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleObjectDelete}>Delete</button>\n    </div>\n}\n\nexport default ManageObjects","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/config.js",[],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/styling/Themes.js",[],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/styling/globalStyles.js",[],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/templates/Forms.js",["71"],"import React, { useEffect, useState } from 'react'\nimport { djangoLookup } from '../../functions/lookup'\n\nexport function IntentForm(props) {\n    let {entries, title, img_url} = props\n    entries = entries.map(entry => {\n        return <DesignRadioButton name={entry.name} iconName={entry.iconName} description={entry.description} text_box={entry.text_box} />\n    })\n\n    return <div className=\"row\">\n        {img_url && <div className=\"flash_art\">\n            <img src={img_url} alt=\"GATHR\" />\n        </div>}\n        <div className=\"unterschrift titel_trenner bold\"><p>{title}</p></div>\n        <div className=\"col-sm-10 col-sm-offset-1\">\n            {entries}\n        </div>\n    </div>\n}\n\nexport function PersonForm(props) {\n    const {entries, img_url, title, n_columns} = props\n    let formEntries = entries.map((entry, index) => {\n        return <FormEntry key={index} apiUrl={entry.apiUrl} onClick={entry.onClick} displayName={entry.displayName} key={index + entry.name} name={entry.name} description={entry.description} type={entry.type} entries={entry.entries} /> \n    })\n\n    if(n_columns === 2) {\n        let left_column = [], right_column = []\n        formEntries.map((entry, index) => {\n            if(index % 2 === 0) {\n                left_column.push(entry)\n            } else {\n                right_column.push(entry)\n            }\n            return 0\n        })\n        formEntries = <div>\n            <div className=\"col-sm-5\">\n                {left_column}\n            </div>\n            <div className=\"col-sm-5\">\n                {right_column}\n            </div>\n        </div>\n    }\n\n    return <div className=\"col-sm-12\">\n        {img_url && <div className=\"flash_art\">\n            <img src={img_url} alt=\"GATHR\" />\n        </div>}\n        <div className=\"unterschrift\"><p>{title}</p></div>\n        {formEntries}\n    </div>\n}\n\n// SUB-COMPONENTS\nfunction DesignRadioButton(props) {\n    const {name, iconName, description, text_box} = props\n    return <div className=\"col-sm-4\">\n        <div className=\"choice\" data-toggle=\"wizard-radio\" rel=\"tooltip\" title={text_box}>\n            <input type=\"radio\" name=\"intent\" value={name} />\n            <div className=\"icon\">\n                <i className=\"material-icons\">{iconName}</i>\n            </div>\n            <h6>{description}</h6>\n        </div>\n    </div>\n}\n\n// === FORM ENTRY ELEMENT ===\n// Input field of a form. Takes name (reference), display name, data type, \n// required boolean, entries (if dropdown), icon name (e. g. material icons)\nexport function FormEntry(props) {\n    const {name, displayName, type, required, entries, iconName, onClick, apiUrl} = props\n    const label = <label className=\"\">{displayName}</label>\n    let inputField = <input name={name} type={type} className=\"form-control\" /> \n    required && inputField.setAttribute(\"required\", true)\n    const [dropdownEntries, setDropdownEntries] = useState([])\n    \n    useEffect(() => {\n        if(type === \"dropdown\" && typeof entries === \"undefined\") {\n            djangoLookup(\"GET\", apiUrl, {}, (response, status) => {\n                status === 200 && setDropdownEntries(response.map(obj => obj.name))\n            })\n        } else if(type === \"dropdown\") {\n            setDropdownEntries(entries)\n        }\n    }, [apiUrl, entries, type])\n\n    let entryElement = <div></div>\n    switch(type) {\n        case \"dropdown\":    entryElement = <div>{label}<Dropdown entries={dropdownEntries} name={name} /></div>; break;\n        case \"radio\":       entryElement = <div>{inputField}{label}</div>; break;\n        case \"checkbox\":    inputField = <input id={name} name={name} type={type} className=\"form-control\" onClick={onClick} /> \n                            entryElement = <div style={{textAlign: \"center\"}}>{inputField}{label}</div>; break;\n        case \"date\":        inputField = <input name={name} type={type} className=\"form-control\" defaultValue=\"2020-01-01\" /> \n                            entryElement = <div>{label}{inputField}</div>; break;\n        default:            entryElement = <div>{label}{inputField}</div>; break;\n    }\n\n    return <div className=\"input-group my-form-entry\">\n        <span className=\"input-group-addon\">\n            {iconName && <i className=\"material-icons\">{iconName}</i>}\n        </span>\n        <div className=\"form-group label-floating\">\n        {entryElement}\n        </div>\n    </div>\n}\n\n// === DROPDOWN ===\n// Takes select options, change function (if needed), and name (for value referencing)\nexport function Dropdown(props) {\n    let {entries, onChangeFun, name} = props\n    entries.sort()\n    entries = entries.map((entry, index) => {\n        return <option key={entry + index} value={entry}>{entry}</option>\n    })\n    return <div className=\"my-form-control\">\n        <select id={name.toLowerCase()} className=\"form-control\" onChange={onChangeFun}>\n        {entries}\n        </select>\n    </div>\n}","/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/functions/lookup.js",[],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/Player.js",[],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/components/Chatbox.js",[],"/Users/fwiethof/Desktop/platform/rbg-live/frontend-react/src/functions/getCookie.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":42,"column":8,"nodeType":"78","endLine":42,"endColumn":10,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"77","line":46,"column":8,"nodeType":"78","endLine":46,"endColumn":16,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":74,"column":88,"nodeType":"83","endLine":74,"endColumn":151},{"ruleId":"84","severity":1,"message":"85","line":140,"column":70,"nodeType":"83","endLine":140,"endColumn":125},{"ruleId":"76","severity":1,"message":"86","line":194,"column":6,"nodeType":"78","endLine":194,"endColumn":8,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"85","line":197,"column":43,"nodeType":"83","endLine":197,"endColumn":130},{"ruleId":"76","severity":1,"message":"88","line":14,"column":8,"nodeType":"78","endLine":14,"endColumn":10,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":24,"column":117,"nodeType":"92","endLine":24,"endColumn":141},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["95"],["96"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'lecture.name'. Either include it or remove the dependency array.",["97"],"React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["98"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [socket]",{"range":"107","text":"108"},"Update the dependencies array to be: [socket, stream]",{"range":"109","text":"110"},"Update the dependencies array to be: [lecture.name]",{"range":"111","text":"112"},"Update the dependencies array to be: [name]",{"range":"113","text":"114"},[1331,1333],"[socket]",[1399,1407],"[socket, stream]",[7495,7497],"[lecture.name]",[471,473],"[name]"]